public class Stack {
    private int[] elements;
    private int top; // Index of the top element

    public Stack(int capacity) {
        elements = new int[capacity];
        top = -1; // Initialize top as -1 when stack is empty
    }

    // Function to push element onto the stack
    public void push(int element) {
        if (top == elements.length - 1) {
            // Stack is full
            System.out.println("Stack overflow. Cannot push element onto the stack.");
            return;
        }
        elements[++top] = element;
    }

    // Function to pop element from the stack
    public int pop() {
        if (isEmpty()) {
            // Stack is empty
            System.out.println("Stack underflow. Cannot pop element from the stack.");
            return -1; // Return a default value
        }
        return elements[top--];
    }

    // Function to check if the stack is empty
    public boolean isEmpty() {
        return top == -1;
    }

    public static void main(String[] args) {
        Stack stack = new Stack(5);

        // Pushing elements onto the stack
        stack.push(10);
        stack.push(20);
        stack.push(30);

        // Popping elements from the stack
        System.out.printl
